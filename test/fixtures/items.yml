item_fancy:
  visibility: <%= JupiterCore::VISIBILITY_PUBLIC %>
  owner: user_regular
  title: "Fancy Item"
  creators: ["Joe Blow"]
  created: "Fall 2017"
  record_created_at: <%= 5.day.ago.to_s(:db) %>
  updated_at: <%= 5.day.ago.to_s(:db) %>
  date_ingested: <%= 5.day.ago %>
  languages: <%= [ControlledVocabulary.era.language.english] %>
  license: <%= ControlledVocabulary.era.license.attribution_4_0_international %>
  item_type: <%= ControlledVocabulary.era.item_type.article %>
  publication_status: <%= [ControlledVocabulary.era.publication_status.published] %>
  subject: ["Fancy things"]
  member_of_paths: <%= ["#{ActiveRecord::FixtureSet.identify(:community_fancy, :uuid)}/#{ActiveRecord::FixtureSet.identify(:collection_fancy, :uuid)}"] %>

item_practical:
  visibility: <%= JupiterCore::VISIBILITY_PUBLIC %>
  owner: regular
  title: "Fancy Item"
  creators: ["Joe Blow"]
  created: "Fall 2017"
  record_created_at: <%= 5.day.ago.to_s(:db) %>
  updated_at: <%= 5.day.ago.to_s(:db) %>
  date_ingested: <%= 5.day.ago %>
  languages: <%= [ControlledVocabulary.era.language.english] %>
  license: <%= ControlledVocabulary.era.license.attribution_4_0_international %>
  item_type: <%= ControlledVocabulary.era.item_type.article %>
  publication_status: <%= [ControlledVocabulary.era.publication_status.published] %>
  subject: ["Practical things"]
  member_of_paths: <%= ["#{ActiveRecord::FixtureSet.identify(:fancy_community, :uuid)}/#{ActiveRecord::FixtureSet.identify(:fancy_collection, :uuid)}"] %>

# The admin item contains a base item entry that contains one of the possible value combinations that pass all validations
# This is a radioactive item
item_admin:
  id: "e2ec88e3-3266-4e95-8575-8b04fac2a679"
  owner: user_admin
  doi: "doi:10.7939/xxxxxxxxx"
  visibility: <%= JupiterCore::VISIBILITY_PUBLIC %>
  creators: ["dc:creator1$ Doe, Jane", "dc:creator2$ Doe, John"]
  contributors:
    ["dc:contributor1$ Perez, Juan", "dc:contributor2$ Perez, Maria"]
  subject:
    ["dc:subject1$ Some subject heading", "dc:subject2$ Some subject heading"]
  created: "2000-01-01"
  sort_year: "2000"
  description: "dcterms:description1$ Arabic ناتيومرلبسفأعدقحكهجشطصزخضغذثئةظؤىءآإ Greek αβγδεζηθικλμνξοπρςστυφχψω ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩ Cyrillic абвгдеёжзийклмнопрстуфхцчшщъыьэюя АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ Lao ກ-ໝ Thai ก-๎ Burmese က-ၙ Khmer ក-៹ Korean 가-힣 Bengali অ-ৱ // Spanish áéíóúüñ French àâçèéêëîïôùûü Portuguese àáâãçéêíóôõú Hindi ऄ-ॿ Pujabi ਅ-ੴ Mandarin 海萵苣白菜冬瓜韭菜竹筍生菜大頭菜豆薯銀甜菜莧菜豌豆蒲公英蔥豌豆苗亞羅婆羅門參西葫蘆。小豆辣根土豆 Japanese アオサメロンキャベツニラ竹シュートレタスルタバガのクズイモ銀ビートアマランスエンドウタンポポねぎ"
  is_version_of:
    [
      "dcterms:isVersionOf1$ Sydorenko, Dmytro & Rankin, Robert. (2013). Simulation of O+ upflows created by electron precipitation and Alfvén waves in the ionosphere. Journal of Geophysical Research: Space Physics, 118(9), 5562-5578. http://doi.org/10.1002/jgra.50531",
      "dcterms:isVersionOf2$ Another version",
    ]
  languages: <%= [ControlledVocabulary.era.language.no_linguistic_content, ControlledVocabulary.era.language.french] %>
  related_link: "dcterms:relation1$ http://doi.org/10.1007/xxxxxx-xxx-xxxx-x"
  source: "dcterms:source1$ Some source"
  spatial_subjects: ["dcterms:spatial1$ Canada", "dcterms:spatial2$ Nicaragua"]
  temporal_subjects:
    ["dcterms:temporal1$ Holocene", "dcterms:temporal2$ Holocene"]
  title: "dcterms:title1$ Some Title for Item"
  alternative_title: "dcterms:alternative1$ Some Alternative Title"
  item_type: <%= ControlledVocabulary.era.item_type.image %>
  depositor: "eraadmi@ualberta.ca"
  license: <%= ControlledVocabulary.era.license.attribution_sharealike_4_0_international %>
  member_of_paths: <%= ["#{ActiveRecord::FixtureSet.identify(:community_fancy, :uuid)}/#{ActiveRecord::FixtureSet.identify(:collection_fancy, :uuid)}"] %>
  fedora3_uuid: "uuid:97b1a8e2-a4b9-4941-b6ed-c4730f0a2a61"
  fedora3_handle: "http://hdl.handle.net/10402/era.33419"
  hydra_noid: "cgq67jr26k"
  ingest_batch: "9019s326c"
  date_ingested: "2000-01-01T00:00:00.007Z"
  record_created_at: "2000-01-01T00:00:00.007Z"
  updated_at: <%= 5.day.from_now.to_s(:db) %>

item_private:
  visibility: <%= JupiterCore::VISIBILITY_PRIVATE %>
  owner: user_admin
  title: "Private Item"
  creators: ["Joe Blow"]
  created: "Fall 2017"
  date_ingested: <%= 5.day.ago %>
  record_created_at: <%= 5.day.ago.to_s(:db) %>
  languages: <%= [ControlledVocabulary.era.language.english] %>
  license: <%= ControlledVocabulary.era.license.attribution_4_0_international %>
  item_type: <%= ControlledVocabulary.era.item_type.article %>
  publication_status: <%= [ControlledVocabulary.era.publication_status.published] %>
  subject: ["Fancy things"]
  member_of_paths: <%= ["#{ActiveRecord::FixtureSet.identify(:community_fancy, :uuid)}/#{ActiveRecord::FixtureSet.identify(:collection_fancy, :uuid)}"] %>

item_old_license:
  visibility: <%= JupiterCore::VISIBILITY_PUBLIC %>
  owner: user_admin
  title: "Admin Item"
  creators: ["Joe Blow"]
  created: "Winter 2017"
  date_ingested: <%= 5.day.ago %>
  record_created_at: <%= 5.day.ago.to_s(:db) %>
  languages: <%= [ControlledVocabulary.era.language.english] %>
  license: <%= ControlledVocabulary.era.old_license.attribution_3_0_international %>
  item_type: <%= ControlledVocabulary.era.item_type.book %>
  subject: ["Ownership"]
  member_of_paths: <%= ["#{ActiveRecord::FixtureSet.identify(:community_fancy, :uuid)}/#{ActiveRecord::FixtureSet.identify(:collection_fancy, :uuid)}"] %>

item_authenticated:
  visibility: <%= JupiterCore::VISIBILITY_AUTHENTICATED %>
  owner: user_admin
  title: "Authenticated Item"
  creators: ["Joe Blow"]
  created: "Fall 2017"
  date_ingested: <%= 5.day.ago %>
  record_created_at: <%= 5.day.ago.to_s(:db) %>
  languages: <%= [ControlledVocabulary.era.language.english] %>
  license: <%= ControlledVocabulary.era.license.attribution_4_0_international %>
  item_type: <%= ControlledVocabulary.era.item_type.article %>
  publication_status: <%= [ControlledVocabulary.era.publication_status.published] %>
  subject: ["Secret things"]
  member_of_paths: <%= ["#{ActiveRecord::FixtureSet.identify(:community_fancy, :uuid)}/#{ActiveRecord::FixtureSet.identify(:collection_fancy, :uuid)}"] %>
